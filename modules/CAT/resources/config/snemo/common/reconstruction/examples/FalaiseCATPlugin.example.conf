# - Configuration
#@description Tracker clusterization using the CAT module
#@key_label   "name"
#@meta_label  "type"

####################################################################
# - Module load section
# only the custom module CAT needs loading
# the rest are known system modules, either known to
# the dpp namespace or
# the snemo::processing namespace
[name="flreconstruct.plugins"]
plugins : string[1] = "Falaise_CAT"
# Adapt this path to the location of Falaise_CAT
Falaise_CAT.directory : string = "@falaise.plugins:"


####################################################################
# Must define "pipeline" as this is the module flreconstruct will use
# Define the main chain of modules in the pipeline:
# 1. Mock Digitize and Mock Calibrate
# 2. Clusterize tracker hits using the CAT algorithm
# 3. Clusterize tracker hits using the SULTAN algorithm
[name="pipeline" type="dpp::chain_module"]
modules : string[4] = "MockCalibration" "CAT" "SULTAN"


####################################################################
# Here is the first in the pipeline, itself a chain module
[name="MockCalibration" type="dpp::chain_module"]

#@config A chain of processing modules that performs the mock calibration

#@description The list of processing modules chained along the pipeline
modules : string[2] = "CalibrateTracker" "CalibrateCalorimeters"


####################################################################
[name="CalibrateTracker" type="snemo::processing::mock_tracker_s2c_module"]

#@config A mock tracker calibration module

# #@description The label of the 'Simulated Data' bank
# SD_label : string  = "SD"

# #@description The label of the 'Calibrated Data' bank
# CD_label : string  = "CD"

#@description The name of the geometry service
Geo_label : string = "geometry"

#@description The category of hits to be processed as Geiger hits
hit_category  : string  = "gg"

#@description Type of the pseudo-random numbers generator setup (GSL PRNG)
random.id          : string  = "mt19937"

#@description Seed for the pseudo-random numbers generator (GSL PRNG)
random.seed        : integer = 12345

#@description Store the hit ID of the true MC Geiger hit from which the calibrated hit that has been built
store_mc_hit_id : boolean = 1

# #@description Drift cell effective/active diameter
# cell_diameter : real = 44.0 mm

# #@description Drift cell effective/active length
# cell_length   : real = 2900.0 mm

# #@description anode efficiency
# base_anode_efficiency   : real = 1.0

# #@description cathode efficiency
# base_cathode_efficiency : real = 1.0

# #@description plasma longitudinal speed
# plasma_longitudinal_speed : real as speed = 5.0 cm/us

# #@description Error on reconstructed longitudinal position (from a plot by Irina)
# sigma_z                  : real = 1.0 cm

# #@description Error on reconstructed longitudinal position when one cathode signal is missing
# sigma_z_missing_cathode  : real = 5.0 cm

# #@description Error parametrization on reconstructed horizontal position (parameters of a fit of data by Irina)
# sigma_r_a  : real = 0.425 mm

# #@description Error parametrization on reconstructed horizontal position (parameters of a fit of data by Irina)
# sigma_r_b  : real = 0.0083

# #@description Error parametrization on reconstructed horizontal position (parameters of a fit of data by Irina)
# sigma_r_r0 : real = 12.25 mm

# #@description Drift time threshold to consider the hit as 'peripheral'
# peripheral_drift_time_threshold : real = 4.0 microsecond

# #@description Drift time threshold to consider the hit as 'delayed'
# delayed_drift_time_threshold    : real = 10.0 microsecond


####################################################################
[name="CalibrateCalorimeters" type="snemo::processing::mock_calorimeter_s2c_module"]

#@config A mock calorimeter claibration module

# #@description The label of the 'Simulated Data' bank
# SD_label  : string  = "SD"

# #@description The label of the 'Calibrated Data' bank
# CD_label  : string  = "CD"

#@description The name of the geometry service
Geo_label : string = "geometry"

# #@description The cluster time width (trigger time window)
# cluster_time_width : real as time = 100 ns

# #@description Type of the pseudo-random numbers generator setup (GSL PRNG)
# random.id          : string  = "mt19937"

#@description Seed for the pseudo-random numbers generator (GSL PRNG)
random.seed        : integer = 12345

#@description Store the hit ID of the true MC calorimeter hit from which the calibrated hit that has been built
store_mc_hit_id : boolean = 1

# #@description Take into account alpha quenching
# alpha_quenching    : boolean = 1

# #@description The names of the calorimeter-like hit categories to be processed
# hit_categories     : string[3]  = "calo" "xcalo" "gveto"

# #@description calo optical lines resolutions (FWHM @ 1 MeV)
# calo.energy.resolution      : real = 0.08

# #@description xcalo optical lines resolutions (FWHM @ 1 MeV)
# xcalo.energy.resolution     : real = 0.12

# #@description gveto optical lines resolutions (FWHM @ 1 MeV)
# gveto.energy.resolution     : real = 0.15

# #@description calo optical lines alpha quenching parameters
# calo.alpha_quenching_parameters : real[3] = 77.4 0.639 2.34

# #@description xcalo optical lines alpha quenching parameters
# xcalo.alpha_quenching_parameters : real[3] = 77.4 0.639 2.34

# #@description gveto optical lines alpha quenching parameters
# gveto.alpha_quenching_parameters : real[3] = 77.4 0.639 2.34

# #@description calo optical lines trigger high thresholds
# calo.energy.high_threshold  : real as energy = 150 keV

# #@description xcalo optical lines trigger high thresholds
# xcalo.energy.high_threshold : real as energy = 150 keV

# #@description gveto optical lines trigger high thresholds
# gveto.energy.high_threshold : real as energy = 150 keV

# #@description calo optical lines trigger low thresholds
# calo.energy.low_threshold   : real as energy =  50 keV

# #@description xcalo optical lines trigger low thresholds
# xcalo.energy.low_threshold  : real as energy =  50 keV

# #@description gveto optical lines trigger low thresholds
# gveto.energy.low_threshold  : real as energy =  50 keV

# #@description calo time resolution parameters
# calo.scintillator_relaxation_time : real as time = 6.0 ns

# #@description xcalo time resolution parameters
# xcalo.scintillator_relaxation_time : real as time = 6.0 ns

# #@description gveto time resolution parameters
# gveto.scintillator_relaxation_time : real as time = 6.0 ns


####################################################################
# Here is the second in the pipeline: the CAT module
[name="CAT" type="snemo::reconstruction::cat_tracker_clustering_module"]

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

#@description The name of the 'tracker clustering data' bank used as output
# TCD_label  : string  = "TCD"

# #@description Force the CAT algorithm to consider a 25 gauss magnetic field (temporary trick)
# CAT.magnetic_field        : real    = 25 gauss

# #@description To be described
# CAT.level                 : string  = "normal"

# #@description To be described
# CAT.max_time              : real    = 5000.0 ms

# #@description To be described
# CAT.small_radius          : real    = 1.0 mm

# #@description To be described
# CAT.probmin               : real    = 0.0

# #@description To be described
# CAT.nofflayers            : integer = 1

# #@description To be described
# CAT.first_event           : integer = -1

# #@description To be described
# #@description Force the CAT algorithm to consider a 25 gauss magnetic field (temporary trick)
# CAT.ratio                 : real    = 10000.0

# #@description To be described
# CAT.driver.sigma_z_factor : real = 1.0

####################################################################
# Here is the third in the pipeline: the SULTAN module
[name="SULTAN" type="snemo::reconstruction::sultan_tracker_clustering_module"]

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

#@description The name of the 'tracker clustering data' bank used as output
TCD_label  : string  = "TCD2"

# #@description Force the SULTAN algorithm to consider a 25 gauss magnetic field (temporary trick)
# SULTAN.magnetic_field     : real    = 25 gauss

# #@description To be described
# SULTAN.clusterizer_level  : string  = "normal"

# #@description To be described
# SULTAN.sequentiator_level : string  = "normal"

# #@description To be described
# SULTAN.max_time     : real  = 10000 ms

# #@description To be described
# SULTAN.Emin         : real  = 200 keV

# #@description To be described
# SULTAN.Emax         : real  = 7.0 MeV

# #@description To be described
# SULTAN.probmin      : real  = 0

# #@description To be described
# SULTAN.nsigma_r     : real  = 5.0

# #@description To be described
# SULTAN.nsigma_z     : real  = 3.0

# #@description To be described
# SULTAN.nofflayers   : integer  = 0

# #@description To be described
# SULTAN.first_event  : integer  = -1

# #@description To be described
# SULTAN.min_ncells_in_cluster        : integer  = 0

# #@description To be described
# SULTAN.ncells_between_triplet_min   : integer  = 0

# #@description To be described
# SULTAN.ncells_between_triplet_range : integer  = 0

# #@description To be described
# SULTAN.nsigmas                      : real  = 1.0

# #@description To be described
# SULTAN.SULTAN.driver.sigma_z_factor : real  = 1.0
