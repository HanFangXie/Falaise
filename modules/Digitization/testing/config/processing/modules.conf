# modules.conf (datatools::multi_properties format)

#@description The list of data processing modules
#@key_label   "name"
#@meta_label  "type"

######################################################
[name="no_triggered_output" type="dpp::output_module"]
#@config A processor that stored the data records in some sequence of files
debug : boolean = 1 
logging.priority             : string = "trace"                 
preserve_existing            : boolean = 0                        
files.mode                   : string = "single"
#@description File name
files.single.filename        : string = "${FALAISE_DIGITIZATION_TESTING_DIR}/data/trigger_no_cut.brio"

######################################################
[name="yes_triggered_output" type="dpp::output_module"]
#@config A processor that stored the data records in some sequence of files
debug : boolean = 1 
logging.priority             : string = "trace"                 
preserve_existing            : boolean = 0                        
files.mode                   : string = "single"
#@description File name
files.single.filename        : string = "${FALAISE_DIGITIZATION_TESTING_DIR}/data/trigger_yes_cut.brio"


#############################################
[name="faketriggercut" type="dpp::if_module"]         
#@config A full data processing chain                             
debug : boolean = 1                                               
cut_service.label : string = "fake_trigger_cut_service"                    
condition_cut     : string = "digicut"                    
#then_status       : string = "continue"
then_module       : string = "yes_triggered_output"
else_module       : string = "no_triggered_output"   

# ##########################################
# [name="pipeline" type="dpp::chain_module"]
# #@config A module that chains several other modules

# #@description Debug flag
# debug : boolean = 0

# #@description Force the module initialization at load stage (default : 0)
# force_initialization_at_load : boolean = 0

# #@description The ordered list of processing modules to be applied :
# modules : string [2] = "faketrig" \
#                        "savefaketrig"

# end of modules.conf