# - Configuration
#@description Mock digitize, mock calibrate and mock tracker clusterize using the MockTrackerClusterizer library plugin/module
#@key_label   "name"
#@meta_label  "type"

#####################################################################
# - Module load section
# only the custom module Falaise_MockTrackerClusterizer needs loading
# the rest are known system modules, either known to
# the dpp namespace or the snemo::processing namespace
[name="flreconstruct.plugins" type=""]

#@config The list of plugins
plugins : string[1] = "Falaise_MockTrackerClusterizer"

# # Adapt this path to the location of Falaise_MockTrackerClusterizer
# Falaise_MockTrackerClusterizer.directory : string = "@falaise.plugins:"


#####################################################################
# Must define "pipeline" as this is the module flreconstruct will use
# Define the main chain of modules in the pipeline:
# 1. Mock digitize and mock calibrate
# 2. Mock clusterization of tracker hits
# 3. Dump the event record
[name="pipeline" type="dpp::chain_module"]

#@config The main pipeline

#@description The list of processing modules chained along the pipeline
modules : string[3] = "MockCalibration" "MockTrackerClusterizer" "DumpCout"


##########################################################
# Here is the first in the pipeline, itself a chain module
[name="MockCalibration" type="dpp::chain_module"]

#@config A chain of processing modules that performs the mock calibration

#@description The list of processing modules chained along the pipeline
modules : string[2] = "CalibrateTracker" "CalibrateCalorimeters"


###########################################################
# Here is the first part of the mock calibration processing
[name="CalibrateTracker" type="snemo::processing::mock_tracker_s2c_module"]

#@include "@falaise.resources:config/snemo/common/reconstruction/1.0/mock_tracker_s2c.conf"


############################################################
# Here is the second part of the mock calibration processing
[name="CalibrateCalorimeters" type="snemo::processing::mock_calorimeter_s2c_module"]

#@include "@falaise.resources:config/snemo/demonstrator/reconstruction/1.0/mock_calorimeter_s2c.conf"


###############################################################################
# Here is the second module in the pipeline: the mock tracker clustering module
[name="MockTrackerClusterizer" type="snemo::reconstruction::mock_tracker_clustering_module"]

#@config Parameters for the Mock Tracker Clusterizer algorithm (MTC)

# #@description Set the logging priority threshold for the module
# logging.priority : string = "fatal"

# #@description Set the logging priority threshold for the embedded tracker clusterizer algorithm
# TC.logging.priority : string = "fatal"

# #@description Set the name of the geometry locator plugin
# TC.locator_plugin_name       : string = "locators_driver"

# #@description Set the time coincidence window for a pre-cluster
# TPC.delayed_hit_cluster_time : real as time = 10 us

# #@description Flag to process the prompt hits
# TPC.processing_prompt_hits   : boolean = 1

#@description Flag to process the delayed hits
TPC.processing_delayed_hits  : boolean = 0

#@description Flag to process independantly pre-clusters on different sides of the source
TPC.split_chamber            : boolean = 1

#@description The label of the Geometry service
Geo_label : string  = "geometry"

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

# #@description The name of the 'tracker clustering data' bank used as output
# TCD_label  : string  = "TCD"

# #@description Maximum layer distance between two neighbour hits
# MTC.max_layer_distance : integer = 2

# #@description Maximum row distance between two neighbour hits
# MTC.max_row_distance   : integer = 2

# #@description Maximum row+layer distance between two neighbour hits
# MTC.max_sum_distance   : integer = 0


####################################################################
# Here is the third and last module in the pipeline: the dump module
[name="DumpCout" type="dpp::dump_module"]

#@config Dump the event record on the standard output stream

#@description The title to be added when printing the data record
title : string = "The event record"

#@description The output stream where to print
output : string  = "cout"
