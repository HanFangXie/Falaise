# - Configuration
#@description Tracker fitting using the TrackFit module
#@key_label   "name"
#@meta_label  "type"

####################################################################
# - Module load section
# CAT and TrackFit need loading
# the rest are known system modules, either known to
# the dpp namespace or
# the snemo::processing namespace
[name="flreconstruct.plugins" type=""]
plugins : string[2] = "Falaise_CAT" "Falaise_TrackFit"
# Adapt this path to the location of Falaise_CAT and Falaise_TrackFit
Falaise_CAT.directory : string = "BuildProducts/lib/x86_64-linux-gnu/Falaise/modules"
Falaise_TrackFit.directory : string = "BuildProducts/lib/x86_64-linux-gnu/Falaise/modules"



####################################################################
# Must define "pipeline" as this is the module flreconstruct will use
# Define the main chain of modules in the pipeline:
# 1. Mock Digitize and Mock Calibrate
# 2. Clusterize tracker hits using the CAT algorithm
# 3. Fitting tracker clusters using the TrackFit algorithm
[name="pipeline" type="dpp::chain_module"]
modules : string[3] = "MockCalibration" "CAT" "TrackFit"


####################################################################
# Here is the first in the pipeline, itself a chain module
[name="MockCalibration" type="dpp::chain_module"]

#@config A chain of processing modules that performs the mock calibration

#@description The list of processing modules chained along the pipeline
modules : string[2] = "CalibrateTracker" "CalibrateCalorimeters"


####################################################################
[name="CalibrateTracker" type="snemo::processing::mock_tracker_s2c_module"]

#@config A mock tracker calibration module

#@description The name of the geometry service
Geo_label : string = "geometry"


####################################################################
[name="CalibrateCalorimeters" type="snemo::processing::mock_calorimeter_s2c_module"]

#@config A mock calorimeter claibration module

#@description The name of the geometry service
Geo_label : string = "geometry"

# #@description The label of the 'Simulated Data' bank
# SD_label : string  = "SD"

# #@description The label of the 'Calibrated Data' bank
# CD_label : string  = "CD"

#@description The cluster time width (trigger time window)
cluster_time_width : real as time = 100 ns

#@description The categories of hits to be processed as calorimeter hits
hit_categories  : string[3]  = "calo" "xcalo" "gveto"

#@description Pseudo-random numbers generator setup : PRNG type
random.id   : string  = "mt19937"

#@description Pseudo-random numbers generator setup : PRNG seed
random.seed : integer = 12345

#@description Activate the alpha quenching
alpha_quenching : boolean = 1

#@description Alpha quenching parameters
alpha_quenching_parameters : real[3] = 77.4 0.639 2.34

#@description Time resolution parameters
scintillator_relaxation_time : real = 6.0 # ns

#@description Optical lines resolutions (FWHM @ 1 MeV)
calo.resolution  : real = 0.08
xcalo.resolution : real = 0.12
gveto.resolution : real = 0.15

#@description Optical lines trigger thresholds
calo.high_threshold  : real = 150 # keV
xcalo.high_threshold : real = 150 # keV
gveto.high_threshold : real = 150 # keV

calo.low_threshold   : real = 50  # keV
xcalo.low_threshold  : real = 50  # keV
gveto.low_threshold  : real = 50  # keV

#@description Flag to store the Id of the associated raw truth hit
store_mc_hit_id : boolean = 1


####################################################################
# Here is the second in the pipeline: the CAT module
[name="CAT" type="snemo::reconstruction::cat_tracker_clustering_module"]

# #@description The name of the 'calibrated data' bank used as input
# CD_label  : string  = "CD"

# #@description The name of the 'tracker clustering data' bank used as output
# TCD_label  : string  = "TCD"

#@description The label of the Geometry service
Geo_label : string  = "geometry"


####################################################################
# Here is the third in the pipeline: the TrackFit module
[name="TrackFit" type="snemo::reconstruction::trackfit_tracker_fitting_module"]

# #@description The label of the 'Tracker Clustering Data' bank
# TCD_label : string  = "TCD"

# #@description The label of the 'Tracker Trajectory Data' bank
# TTD_label : string  = "TTD"

#@description The label of the Geometry service
Geo_label : string  = "geometry"

#@description The maximum number of fits to be saved (0 means all will be kept)
maximum_number_of_fits : integer = 0

# #@description The name of the geometry locator plugin
# locator_plugin_name : string = "locator"

# #@description Trackfit logging priority
# trackfit.logging.priority : string = "fatal"

#@description Use drift time (re)calibration (values: "default", "snemo")
trackfit.drift_time_calibration_label : string = "snemo"

#@description Fit models ("helix", "line" or both)
trackfit.models : string[2] = "helix" "line"

#@description 'Line' fit only guess ("BB", "BT", "TB", "TT")
trackfit.line.only_guess  : string[4] = "BB" "BT" "TB" "TT"

#@description 'Helix' fit only guess ("BBB", "BBT", "BTB", "BTT", "TBB", "TBT", "TTB", "TTT")
trackfit.helix.only_guess : string[1] = "BBB" "BBT" "BTB" "BTT" "TBB" "TBT" "TTB" "TTT"

##################
# Line fit guess #
##################

# #@description Logging priority threshold for the line fit
# trackfit.line.guess.logging.priority : string = "fatal"

# #@description Use max radius (cell size) to construct initial guess point (1) or use the effective drift Geiger distance of the hit (0)
# trackfit.line.guess.use_max_radius    : boolean = 0

# #@description Apply a factor (>0) to the max radius (devel mode)
# trackfit.line.guess.max_radius_factor : real = 1.0

# #@description Use guess trust (1) or keep all of the guess fits (0) and select later
# trackfit.line.guess.use_guess_trust   : boolean = 0

# #@description Mode for trusting a fit guess ("counter", "barycenter")
# trackfit.line.guess.guess_trust_mode  : string = "counter"

#@description Fit the delayed Geiger cluster
trackfit.line.guess.fit_delay_cluster : boolean = 1


############
# Line fit #
############

# #@description Print the status of the fit stepper at each step (devel only)
# trackfit.line.fit.step_print_status : boolean = 0

# #@description Plot the 2D view of the fitted data at each step (devel only)
# trackfit.line.fit.step_draw         : boolean = 0

# #@description Track fit adds start time as an additionnal parameter to the fit (needs a calibration driver)
# trackfit.line.fit.fit_start_time    : boolean = 0

# #@description Track fit recomputes the drift distance from drift time (needs a calibration driver)
# trackfit.line.fit.using_drift_time  : boolean = 0

# #@description Allow a fitted track to begin not tangential to the first hit
# trackfit.line.fit.using_first       : boolean = 0

# #@description Allow a fitted track to end not tangential to the last hit
# trackfit.line.fit.using_last        : boolean = 0


###################
# Helix fit guess #
###################

# #@description Logging priority threshold for the helix fit
# trackfit.helix.guess.logging.priority : string = "fatal"

# #@description Use max radius (cell size) to construct initial guess point (1) or use the effective drift Geiger distance of the hit (0)
# trackfit.helix.guess.use_max_radius    : boolean = 0

# #@description Apply a factor (>0) to the max radius (devel mode)
# trackfit.helix.guess.max_radius_factor : real = 1.0

# #@description Use guess trust (1) or keep all of the guess fits (0) and select later
# trackfit.helix.guess.use_guess_trust   : boolean = 0

# #@description Mode for trusting a fit guess ("counter", "barycenter")
# trackfit.helix.guess.guess_trust_mode  : string = "counter"

#@description Fit the delayed geiger cluster (by default, false since this mode is devoted to line fit)
trackfit.helix.guess.fit_delay_cluster : boolean = 1


#############
# Helix fit #
#############

# #@description Print the status of the fit stepper at each step (devel only)
# trackfit.helix.fit.step_print_status : boolean = 0

# #@description Plot the 2D view of the fitted data at each step (devel only)
# trackfit.helix.fit.step_draw         : boolean = 0

# #@description Track fit recomputes the drift distance from drift time (needs a calibration driver)
# trackfit.helix.fit.using_drift_time  : boolean = 0

# #@description Allow a fitted track to begin not tangential to the first hit
# trackfit.helix.fit.using_first       : boolean = 0

# #@description Allow a fitted track to end not tangential to the last hit
# trackfit.helix.fit.using_last        : boolean = 0
