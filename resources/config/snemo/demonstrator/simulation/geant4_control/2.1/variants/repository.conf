# -*- mode: conf-unix; -*-
# @falaise:config/snemo/demonstrator/simulation/geant4_control/2.1/variants/repository.conf (format: datatools::properties)

#@config The main configuration parameters for the 'simulation' repository

#@description The logging priority
name         : string = "simulation"

#@description The display name
display_name : string = "SuperNEMO Geant4 simulation variant repository"

#@description The organization name
organization : string = "snemo"

#@description The application name
application  : string = "falaise"

#@description The logging priority
logging.priority : string = "fatal"

#@description The list of embedded variant registries
registries : string[4] = "geometry" "vertexes" "primary_events" "simulation"

############
# Geometry #
############

#@description Configuration of the geometry variant registry:
registries.geometry.config : string as path = \
  "@falaise:config/snemo/demonstrator/geometry/4.0/variants/registries/geometry.conf"

#@description Rank of the geometry variant registry:
registries.geometry.rank : integer = 0

############
# Vertexes #
############

#@description Configuration of the vertexes variant registry:
registries.vertexes.config : string as path = \
  "@falaise:config/snemo/demonstrator/simulation/vertexes/4.1/variants/registries/vertexes.conf"

#@description Rank of the vertexes variant registry:
registries.vertexes.rank : integer = 1

##################
# Primary events #
##################

#@description Configuration of the primary_events variant registry:
registries.primary_events.config : string as path = \
  "@falaise:config/common/simulation/primary_events/1.1/variants/registries/primary_events.conf"

#@description Rank of the vertexes variant registry:
registries.primary_events.rank : integer = 2

##############
# simulation #
##############

registries.simulation.config             : string as path = \
  "@falaise:config/snemo/demonstrator/simulation/geant4_control/2.1/variants/registries/simulation.conf"

#@description Rank of the simulation variant registry:
registries.simulation.rank : integer = 3


###########################
# Global dependency model #
###########################

# Note:
# The availability of some groups of vertex generators depends on some
# special configuration of the geometry. This introduces a global dependency
# scheme between the "vertexes" registry and the "geometry" registry.

#@description List of dependee slots
gdm.dependees.slots : integer[4] = 0 1 2 3

#@description Dependee at slot #0
gdm.dependees.slot_0.variant : string = "geometry:layout/if_half_commissioning"

#@description Dependee at slot #1
gdm.dependees.slot_1.variant : string = "geometry:layout/if_basic/source_calibration/is_active"

#@description Dependee at slot #2
gdm.dependees.slot_2.variant : string = "geometry:layout/if_basic/shielding/is_on"

#@description Dependee at slot #3
gdm.dependees.slot_3.variant : string = "geometry:layout/if_basic"

#@description List of dependencies
gdm.dependencies : string[4] = \
  "CalibrationVtxDep" \
  "HalfCommissioningVtxDep" \
  "ShieldingVtxDep" \
  "SourceVtxDep"

# Note:
# The vertex generator group 'Calibration' is only enabled if the calibration sources
# are set in the geometry.

#@description Depender of dependency "CalibrationVtxDep"
gdm.dependencies.CalibrationVtxDep.depender : string     = "vertexes:generator@Calibration"

#@description Input dependee slots of dependency "CalibrationVtxDep"
gdm.dependencies.CalibrationVtxDep.slots    : integer[1] = 1

#@description Logic formula of dependency "CalibrationVtxDep"
gdm.dependencies.CalibrationVtxDep.logic    : string     = "[1]"

# Note:
# The vertex generator group 'HalfCommissioning' is only enabled if the layout
# of the geometry corresponds to the half-detector for commissioning.

#@description Depender of dependency "HalfCommissioningVtxDep"
gdm.dependencies.HalfCommissioningVtxDep.depender : string     = "vertexes:generator@HalfCommissioning"

#@description Input dependee slots of dependency "HalfCommissioningVtxDep"
gdm.dependencies.HalfCommissioningVtxDep.slots    : integer[1] = 0

#@description Logic formula of dependency "HalfCommissioningVtxDep"
gdm.dependencies.HalfCommissioningVtxDep.logic    : string     = "[0]"

# Note:
# The vertex generator group 'Shielding' is only enabled if the layout
# of the geometry has the shielding set

#@description Depender of dependency "ShieldingVtxDep"
gdm.dependencies.ShieldingVtxDep.depender : string     = "vertexes:generator@Shielding"

#@description Input dependee slots of dependency "ShieldingVtxDep"
gdm.dependencies.ShieldingVtxDep.slots    : integer[1] = 2

#@description Logic formula of dependency "ShieldingVtxDep"
gdm.dependencies.ShieldingVtxDep.logic    : string     = "[2]"

# Note:
# The vertex generator group 'Source' is only enabled if the layout
# of the geometry is basic

#@description Depender of dependency "SourceVtxDep"
gdm.dependencies.SourceVtxDep.depender : string     = "vertexes:generator@Source"

#@description Input dependee slots of dependency "SourceVtxDep"
gdm.dependencies.SourceVtxDep.slots    : integer[1] = 3

#@description Logic formula of dependency "SourceVtxDep"
gdm.dependencies.SourceVtxDep.logic    : string     = "[3]"

# Dependencies of variant registries:
registries.vertexes.commissioning.dependencies : string[1] = \
  "geometry:layout/if_half_commissioning"

#@description The lock request
lock : boolean = true


# end of @falaise:config/snemo/demonstrator/simulation/geant4_control/2.1/variants/repository.conf