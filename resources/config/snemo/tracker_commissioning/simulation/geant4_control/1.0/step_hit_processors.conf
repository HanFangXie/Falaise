# List of multi-properties (datatools::multi_properties):

#@description  The list of official MC step hit processors for SuperNEMO tracker commissioning setup
#@key_label   "name"
#@meta_label  "type"


     ###################################
     #                                 #
     # MUON TRIGGER STEP HIT PROCESSOR #
     #                                 #
     ###################################

##########################################################################
[name="trig.hit_processor" type="mctools::calorimeter_step_hit_processor"]

#@config The step hit processor for the muon trigger hits

# This  processor collects  all MC  true  hits from  the muon  trigger
# volumes  (with the  "trigger_SD"  sensitive  category property)  and
# build calorimeter-like  "trig" hits  associated to the  muon trigger
# scintillator plate ID.  The purpose of this processing is to build a
# single "trig"  hit from the  collection of  true hits produced  by a
# muon traversing the trigger scintillator plate.  Both the start time
# and the total energy deposit are recorded in the "trig" hit.

# Input from Geant4:
#
#          incoming  muon
#                 \             trigger scintillator plate
#   +--------------o---------------------------------+
#   |               \ <-- true hit #0                |
#   |                o                               |
#   |                 \  <-- true hit #1             |
#   |                  o                             |
#   |                   \  <-- true hit #2           |
#   +--------------------o---------------------------+
#                         \
#                      outgoing muon
#
# Output from the processor:
#
#   +-----------[t0/r0]--+---------------------------+
#   |              :\   /:                           |
#   |              : \ / :                           |
#   |              : [DE]: <-- "trig" hit            |
#   |              : / \ :                           |
#   |              :/   \:                           |
#   +--------------+--[t1/r1]------------------------+
#
#   The output "trig" hit records:
#   - the start time [t0]
#   - the stop time [t1]
#   - the start position [r0]
#   - the stop position [r1]
#   - the energy deposit [DE]
#   See the mctools::base_step_hit class from the Bayeux/mctools module.


##################################
# Basic configuration parameters #
##################################

#@description Debug flag
debug                 : boolean = 0

#@description The name of the category of output MC hits generated by this processor
hit.category          : string = "trig"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category    : string = "trigger_SD"

#@description Flag to activate a preallocated buffer/pool of MC hits to optimize memory management
use_private_pool      : boolean  = 1

#@description Initial capacity of the buffer/pool of MC hits
private_pool_capacity : integer  = 10

##############################################################################
# Parameters specific to the 'mctools::calorimeter_step_hit_processor' class #
##############################################################################

#@description The time spread of primary MC step hits to apply the clusterization
cluster.time_range    : real as time  = 1.0 ns

#@description The spacial spread of primary MC step hits to apply the clusterization
cluster.space_range   : real as length = 10.0 mm

#@description The name of the geometry category to be attached to the output MC hits
mapping.category      : string = "mu_trigger"


     #############################
     #                           #
     # GEIGER STEP HIT PROCESSOR #
     #                           #
     #############################

#########################################################################
[name="gg.hit_processor" type="snemo::simulation::gg_step_hit_processor"]

#@config The step hit processor for the Geiger simulated hits

# This processor collects all MC true hits from the drift cell volumes
# (with  the  "tracker_SD"  sensitive category  property)  and  builds
# Geiger-like hits associated to a  given drift cell ID.  It generates
# randomly distributed  primary ionizations along  the true step  of a
# given particle  (electron/positron, muon, alpha...) and  records the
# time and position  of the ionization process that is  closest to the
# anode wire.  Optionally  it is possible to record the  true time and
# position of the minimal approach distance to the anode wire.

#
#  incoming charged particle
#       \                     drift cell volume
#   +----o------------------------------------+
#   |     \                                   |    Caption:
#   |      *  <-- true hit #0                 |
#   |       *                                 |    o---o   true "tracker" hit.
#   |        \                                |
#   |         o                               |    *       primary ionization in the tracking gas.
#   |         *                               |
#   |         *  <-- true hit #1              |    (*)     primary ionization closest to the anode
#   |         |                               |            wire.
#   |         |   [dc]     [r1]               |
#   |   [rc] (c)--------.@                    |    . . .   Geiger avalanche path.
#   |         o      .                        |
#   |          \  .                           |    @       Anode wire.
#   |  [t0,r0] (*)                            |
#   |    [p0]    \   <-- true hit #2          |    (c)---  Minimum Approach Position (MAP)
#   |             *                           |
#   |              o                          |
#   |               *                         |
#   |                \   <-- true hit #3      |
#   |                 *                       |
#   +------------------o----------------------+
#                       \
#              outgoing charged particle
#
#   The output "gg" hit records:
#   - the time of the primary ionization [t0]
#   - the position of the primary ionization [r0]
#   - the momentum of the particle at primary ionization [p0]
#   - the position of the impact of the Geiger avalanche on the anode wire [r1]
#   Optional parameters are:
#   - the minimum approach position [rc] and distance[dc]
#   See the mctools::base_step_hit class from the Bayeux/mctools module.

##################################
# Basic configuration parameters #
##################################

#@description Debug flag
debug              : boolean = 0

#@description The name of the category of output MC hits generated by this processor
hit.category       : string  = "gg"

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "tracker_SD"


###############################################################################
# Parameters specific to the 'snemo::simulation::gg_step_hit_processor' class #
###############################################################################

#@description The name of the geometry category to be attached to the output MC hits
mapping.category    : string  = "drift_cell_core"

#@description The name of the geometry category associated to the SuperNEMO module
module.category    : string  = "module"

#@description The type of the PRNG used internally by the processor
#rng.id              : string  = "mt19937"

#@description The seed of the PRNG used internally by the processor
#rng.seed            : integer = 314159

#@description A flag that tells to simulate a continuous ionization process along the track (default = false)
#use_continuous_ionization : boolean = false

#@description Fiducial radius of the drift cell taken into account to produce some hits
#fiducial_drift_radius : real  =   22.0  # mm

#@description Fiducial length of the drift cell taken into account to produce some hits
#fiducial_drift_length : real  = 2866.0  # mm

#@description Mean ionization energy used to randomize electron-ion pairs along the particle path
mean_ionization_energy : real = 50.0 eV

#@description The time resolution
time_resolution        : real = 10.0 ns

#@description Store true track ID and parent track ID
store_track_infos      : boolean = 1

#@description For each cell traversed by a track, compute the position of minimum approach to the anode wire (debug purpose only so default is 0)
compute_minimum_approach_position : boolean = 1


     ###########################################
     #                                         #
     # TRACK VISUALIZATION STEP HIT PROCESSORS #
     #                                         #
     ###########################################

####################################################################################
[name="muon_trigger.visu.hit_processor" type="mctools::push_all_step_hit_processor"]

#@config The step hit processor for collecting the 'muon trigger' simulated hits

# The truth hits collected from the 'muon trigger' blocks by the 'trigger_SD'
# sensitive detector are pushed without modification in the '__visu.tracks'
# collection. The configuration of the 'trigger_SD' sensitive detector
# is provided in the 'detector_construction' section of the main Geant4 manager
# configuration.

#@description Debug flag
debug              : boolean = 0

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "trigger_SD"

#@description The category of output hit associated to this processor
hit.category       : string  = "__visu.tracks"


###############################################################################
[name="tracker.visu.hit_processor" type="mctools::push_all_step_hit_processor"]

#@config The step hit processor for collecting the 'tracker' simulated hits

# The truth hits collected from the 'drift cell' volumes by the 'tracker_SD'
# sensitive detector are pushed without modification in the '__visu.tracks'
# collection. The configuration of the 'tracker_SD' sensitive detector
# is provided in the 'detector_construction' section of the main Geant4 manager
# configuration.

#@description Debug flag
debug              : boolean = 0

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "tracker_SD"

#@description The category of output hit associated to this processor
hit.category       : string  = "__visu.tracks"


####################################################################################
[name="tracking_gas.visu.hit_processor" type="mctools::push_all_step_hit_processor"]

#@config The step hit processor for collecting any true hit in the 'tracking gas' materials

# Here we create a non-official sensitive detector named '__tracking_gas_SD'.
# It is associated to all volumes filled with the 'tracking_gas' material.
# The truth hits collected from these volumes by the '__tracking_gas_SD'
# sensitive detector are pushed without modification in the '__visu.tracks'
# collection. Here we also define some additional parameters to configure the
# behaviour of this sensitive detector.

#@description Debug flag
debug              : boolean = 0

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "__tracking_gas_SD"

#@description The category of output hit associated to this processor
hit.category       : string  = "__visu.tracks"

#@description The names of the geometry logical volumes where MC true hits must be processed to fill the output hit category
geometry.volumes.with_materials : string[1] = "tracking_gas"

# Additional parameters for the "__tracking_gas_SD" sensitive detector.
# Some auxiliary informations will be recorded for each MC step hit as
# auxiliary properties of the 'mctools::base_step_hit' objects:

#@description Flag to activate the recording of the particle momentum
sensitive.record_momentum                  : boolean = 1

# #@description Flag to activate the recording of the particle kinetic energy
# sensitive.record_kinetic_energy            : boolean = 0

#@description Flag to activate the recording of alpha particle quenching
sensitive.record_alpha_quenching           : boolean = 0

#@description Flag to activate the recording of the track ID and parent track ID
sensitive.record_track_id                  : boolean = 1

#@description Flag to activate the recording of the name of the sensitive category
sensitive.record_sensitive_category        : boolean = 1

# #@description Flag to activate the recording of the name of the material
# sensitive.record_material                  : boolean = 0

# #@description Flag to activate the recording of the name of the creator process
# sensitive.record_creator_process           : boolean = 0

# #@description Flag to activate the recording of the informations about the G4 volume
# sensitive.record_g4_volume_infos           : boolean = 0

#@description Flag to activate the recording of the informations about boundary crossing
sensitive.record_boundaries                : boolean = 1

#@description Flag to activate the recording of any primary particle flag
sensitive.record_primary_particle          : boolean = 1

# #@description Flag to drop hits with zero energy deposit
# sensitive.drop_zero_energy_deposit_steps   : boolean = 0

# #@description Flag to track gamma particles
# sensitive.track_gamma                      : boolean = 1


###########################################################################
[name="air.visu.hit_processor" type="mctools::push_all_step_hit_processor"]

#@config The step hit processor for collecting the simulated hits within the tracker/source & tracker/calo gaps

#@description Debug flag
debug              : boolean = 0

#@description The name of the sensitive MC hits that must be processed to fill the output hit category
sensitive.category : string  = "__air_SD"

#@description The category of output hit associated to this processor
hit.category       : string  = "__visu.tracks"

#@description The names of the geometry logical volumes where MC true hits must be processed to fill the output hit category
geometry.volumes   : string[2] = "experimental_hall.model.log" "C0_module.model.log"

# Additional parameters for the "__air_SD" sensitive detector.
# Some auxiliary informations will be recorded for each MC step hit as
# auxiliary properties of the 'mctools::base_step_hit' objects:

# #@description Flag to activate the recording of the particle momentum
# sensitive.record_momentum                  : boolean = 0

# #@description Flag to activate the recording of the particle kinetic energy
# sensitive.record_kinetic_energy            : boolean = 0

# #@description Flag to activate the recording of alpha particle quenching
# sensitive.record_alpha_quenching           : boolean = 0

#@description Flag to activate the recording of the track ID and parent track ID
sensitive.record_track_id                  : boolean = 1

#@description Flag to activate the recording of the name of the sensitive category
sensitive.record_sensitive_category        : boolean = 1

#@description Flag to activate the recording of the name of the material
sensitive.record_material                  : boolean = 1

# #@description Flag to activate the recording of the name of the creator process
# sensitive.record_creator_process           : boolean = 0

#@description Flag to activate the recording of the informations about the G4 volume
sensitive.record_g4_volume_infos           : boolean = 1

# #@description Flag to activate the recording of the informations about boundary crossing
# sensitive.record_boundaries                : boolean = 0

# #@description Flag to activate the recording of any primary particle flag
# sensitive.record_primary_particle          : boolean = 0

# #@description Flag to drop hits with zero energy deposit
# sensitive.drop_zero_energy_deposit_steps   : boolean = 0

# #@description Flag to track gamma particles
# sensitive.track_gamma                      : boolean = 1


# end
